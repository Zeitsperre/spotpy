name: Continuous Integration

on:
  push:
    branches:
      - "master"
    tags:
      - "*"
  pull_request:
    branches:
      - "master"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # needed by coveralls
  GITHUB_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

jobs:
  source_check:
    name: Linting (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.12' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install black 'isort[colors]<6'
          python -m pip install --editable .

      - name: isort check
        run: |
          python -m black --check --diff --color .
          python -m isort --check --diff --color .

  build_sdist:
    name: sdist on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        python-version: [ '3.10', '3.13' ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build pytest-cov
          python -m pip install --editable .[test]

      - name: Run tests
        run: |
          python -m pytest --cov spotpy --cov-report term-missing -v tests/

      - name: Upload coverage to Coveralls
        if: matrix.python-version != '3.13'
        run: |
          python -m pip install coveralls
          python -m coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build sdist
        if: matrix.python-version == '3.13'
        run: |
          python -m build

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
        with:
          name: dist-sdist
          path: dist/

  upload_to_pypi:
    name: Upload to PyPI/Test PyPI
    needs:
      - build_sdist
    runs-on: ubuntu-latest
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: dist-sdist
          path: dist/
       
      - name: Publish to Test PyPI
        # only if working on master
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        # only if tagged
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
